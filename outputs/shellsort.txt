1 Function Empty shellsort(Int array[ ], Int n) Open

          S = DeclaracaoFunção S
          DeclaracaoFunção = 'Function' FunctionType IdOuMain '(' DeclaraçãoConstante ')' Bloco
              [0001, 0001] (0017,          RW_FUNCTION) {Function}
          Vartype = Empty
              [0001, 0002] (0038,             RW_EMPTY) {Empty}
          IdOuMain = 'id'
              [0001, 0003] (0001,                   ID) {shellsort}
              [0001, 0004] (0046,            DEL_OPENP) {(}
          DeclaraçãoConstante = Vartype 'id'  Vector DeclaraçãoConstante_LL
          Vartype = Int
              [0001, 0005] (0024,               RW_INT) {Int}
              [0001, 0006] (0001,                   ID) {array}
          VetTipo = '[' AE ']'
              [0001, 0007] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0001, 0008] (0048,           DEL_ENDBRA) {]}
          DeclaraçãoConstante_LL = ',' Tipo 'id'  Vector DeclaraçãoConstante_LL
              [0001, 0009] (0050,            DEL_COMMA) {,}
          Vartype = Int
              [0001, 0010] (0024,               RW_INT) {Int}
              [0001, 0011] (0001,                   ID) {n}
          VetTipo = ε
              [0001, 0012] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0001, 0013] (0032,              RW_OPEN) {Open}
2               Int h = 1, c, j;

          Instrução = DeclaraçãoId Instrução
          DeclaraçãoId = FunctionType Id ';'
          Vartype = Int
              [0002, 0001] (0024,               RW_INT) {Int}
          LId = Id Atribuição Id_LL
          Id = 'id' ArrayOpt
              [0002, 0002] (0001,                   ID) {h}
          VetTipo = ε
          Atribuição = '=' CE
              [0002, 0003] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0002, 0004] (0040,              CTE_INT) {1}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          Id_LL = ',' Id Atribuição Id_LL
              [0002, 0005] (0050,            DEL_COMMA) {,}
          Id = 'id' ArrayOpt
              [0002, 0006] (0001,                   ID) {c}
          VetTipo = ε
          Atribuição = ε
          Id_LL = ',' Id Atribuição Id_LL
              [0002, 0007] (0050,            DEL_COMMA) {,}
          Id = 'id' ArrayOpt
              [0002, 0008] (0001,                   ID) {j}
          VetTipo = ε
          Atribuição = ε
          Id_LL = ε
              [0002, 0009] (0051,             DEL_SEMI) {;}
3

4         While (h < n) Open

While
          Instrução = Cmd Instrução
          Cmd = 'CmdWhile' '(' BE ')' Bloco
              [0004, 0001] (0019,             RW_WHILE) {While}
              [0004, 0002] (0046,            DEL_OPENP) {(}
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0004, 0003] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = 'OP_LESS' AR BF_LL
              [0004, 0004] (0007,              OP_LESS) {<}
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0004, 0005] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
              [0004, 0006] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0004, 0007] (0032,              RW_OPEN) {Open}
5                       h = h * 3 + 1;

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0005, 0001] (0001,                   ID) {h}
          ParamAtr = '=' CE lAtr
              [0005, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0005, 0003] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = 'OP_MUL' AP AT_LL
              [0005, 0004] (0005,               OP_MUL) {*}
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0005, 0005] (0040,              CTE_INT) {3}
          AP_LL = ε
          AT_LL = ε
          AE_LL = 'OP_SUM' AT AE
              [0005, 0006] (0002,               OP_SUM) {+}
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0005, 0007] (0040,              CTE_INT) {1}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0005, 0008] (0051,             DEL_SEMI) {;}
6               Close

          Instrução = ε
              [0006, 0001] (0033,             RW_CLOSE) {Close}
7

8               h = h / 3;

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0008, 0001] (0001,                   ID) {h}
          ParamAtr = '=' CE lAtr
              [0008, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0008, 0003] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = 'OP_DIV' AP AT_LL
              [0008, 0004] (0004,               OP_DIV) {/}
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0008, 0005] (0040,              CTE_INT) {3}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0008, 0006] (0051,             DEL_SEMI) {;}
9

10              While(h > 0) Open

While
          Instrução = Cmd Instrução
          Cmd = 'CmdWhile' '(' BE ')' Bloco
              [0010, 0001] (0019,             RW_WHILE) {While}
              [0010, 0002] (0046,            DEL_OPENP) {(}
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0010, 0003] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = 'OP_GREATER' AR BF_LL
              [0010, 0004] (0006,           OP_GREATER) {>}
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0010, 0005] (0040,              CTE_INT) {0}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
              [0010, 0006] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0010, 0007] (0032,              RW_OPEN) {Open}
11

12                      For (Int i = h, 1, n) Open

For
          Instrução = Cmd Instrução
              [0012, 0001] (0020,               RW_FOR) {For}
          For = '(' 'Int' 'id' '='  AE ',' AE ForStep')' Bloco
              [0012, 0002] (0046,            DEL_OPENP) {(}
              [0012, 0003] (0024,               RW_INT) {Int}
              [0012, 0004] (0001,                   ID) {i}
              [0012, 0005] (0015,               OP_ATR) {=}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0012, 0006] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0012, 0007] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0012, 0008] (0040,              CTE_INT) {1}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          ForStep = ',' AE
              [0012, 0009] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0012, 0010] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0012, 0011] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0012, 0012] (0032,              RW_OPEN) {Open}
13

14                     c = array[i];

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0014, 0001] (0001,                   ID) {c}
          ParamAtr = '=' CE lAtr
              [0014, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0014, 0003] (0001,                   ID) {array}
          IdChamadaFunção_LL = '[' AE']'
              [0014, 0004] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0014, 0005] (0001,                   ID) {i}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0014, 0006] (0048,           DEL_ENDBRA) {]}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0014, 0007] (0051,             DEL_SEMI) {;}
15                     j = i;

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0015, 0001] (0001,                   ID) {j}
          ParamAtr = '=' CE lAtr
              [0015, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0015, 0003] (0001,                   ID) {i}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0015, 0004] (0051,             DEL_SEMI) {;}
16

17                     While (j >= h And array[j - h] > c) Open

While
          Instrução = Cmd Instrução
          Cmd = 'CmdWhile' '(' BE ')' Bloco
              [0017, 0001] (0019,             RW_WHILE) {While}
              [0017, 0002] (0046,            DEL_OPENP) {(}
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0017, 0003] (0001,                   ID) {j}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = 'OP_EQUALG' AR BF_LL
              [0017, 0004] (0009,            OP_EQUALG) {>=}
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0017, 0005] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = 'OP_AND' BF BT_LL
              [0017, 0006] (0011,               OP_AND) {And}
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0017, 0007] (0001,                   ID) {array}
          IdChamadaFunção_LL = '[' AE']'
              [0017, 0008] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0017, 0009] (0001,                   ID) {j}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = 'OP_SUB' AT AE_LL
              [0017, 0010] (0003,               OP_SUB) {-}
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0017, 0011] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0017, 0012] (0048,           DEL_ENDBRA) {]}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = 'OP_GREATER' AR BF_LL
              [0017, 0013] (0006,           OP_GREATER) {>}
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0017, 0014] (0001,                   ID) {c}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
              [0017, 0015] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0017, 0016] (0032,              RW_OPEN) {Open}
18

19                             array[j] = array[j - h];

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0019, 0001] (0001,                   ID) {array}
          ParamAtr = '[' AE ']' '=' CE lAtr
              [0019, 0002] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0019, 0003] (0001,                   ID) {j}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0019, 0004] (0048,           DEL_ENDBRA) {]}
              [0019, 0005] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0019, 0006] (0001,                   ID) {array}
          IdChamadaFunção_LL = '[' AE']'
              [0019, 0007] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0019, 0008] (0001,                   ID) {j}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = 'OP_SUB' AT AE_LL
              [0019, 0009] (0003,               OP_SUB) {-}
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0019, 0010] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0019, 0011] (0048,           DEL_ENDBRA) {]}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0019, 0012] (0051,             DEL_SEMI) {;}
20                             j = j - h;

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0020, 0001] (0001,                   ID) {j}
          ParamAtr = '=' CE lAtr
              [0020, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0020, 0003] (0001,                   ID) {j}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = 'OP_SUB' AT AE_LL
              [0020, 0004] (0003,               OP_SUB) {-}
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0020, 0005] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0020, 0006] (0051,             DEL_SEMI) {;}
21

22                     Close

          Instrução = ε
              [0022, 0001] (0033,             RW_CLOSE) {Close}
23

24                     array[j] = c;

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0024, 0001] (0001,                   ID) {array}
          ParamAtr = '[' AE ']' '=' CE lAtr
              [0024, 0002] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0024, 0003] (0001,                   ID) {j}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0024, 0004] (0048,           DEL_ENDBRA) {]}
              [0024, 0005] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0024, 0006] (0001,                   ID) {c}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0024, 0007] (0051,             DEL_SEMI) {;}
25                      Close

          Instrução = ε
              [0025, 0001] (0033,             RW_CLOSE) {Close}
26

27                      h = h / 2;

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0027, 0001] (0001,                   ID) {h}
          ParamAtr = '=' CE lAtr
              [0027, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0027, 0003] (0001,                   ID) {h}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = 'OP_DIV' AP AT_LL
              [0027, 0004] (0004,               OP_DIV) {/}
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0027, 0005] (0040,              CTE_INT) {2}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0027, 0006] (0051,             DEL_SEMI) {;}
28

29              Close

          Instrução = ε
              [0029, 0001] (0033,             RW_CLOSE) {Close}
30

31              Back;

          Instrução = 'Back' Back ';'
              [0031, 0001] (0018,              RW_BACK) {Back}
          Back = ε
              [0031, 0002] (0051,             DEL_SEMI) {;}
32

33      Close

              [0033, 0001] (0033,             RW_CLOSE) {Close}
34

35 Function Int Main ( ) Open

          S = DeclaracaoFunção S
          DeclaracaoFunção = 'Function' FunctionType IdOuMain '(' DeclaraçãoConstante ')' Bloco
              [0035, 0001] (0017,          RW_FUNCTION) {Function}
          Vartype = Int
              [0035, 0002] (0024,               RW_INT) {Int}
          IdOuMain = 'Main'
              [0035, 0003] (0037,              RW_MAIN) {Main}
              [0035, 0004] (0046,            DEL_OPENP) {(}
          DeclaraçãoConstante = ε
              [0035, 0005] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0035, 0006] (0032,              RW_OPEN) {Open}
36              Int n, current;

          Instrução = DeclaraçãoId Instrução
          DeclaraçãoId = FunctionType Id ';'
          Vartype = Int
              [0036, 0001] (0024,               RW_INT) {Int}
          LId = Id Atribuição Id_LL
          Id = 'id' ArrayOpt
              [0036, 0002] (0001,                   ID) {n}
          VetTipo = ε
          Atribuição = ε
          Id_LL = ',' Id Atribuição Id_LL
              [0036, 0003] (0050,            DEL_COMMA) {,}
          Id = 'id' ArrayOpt
              [0036, 0004] (0001,                   ID) {current}
          VetTipo = ε
          Atribuição = ε
          Id_LL = ε
              [0036, 0005] (0051,             DEL_SEMI) {;}
37              Print('Insira o tamanho do array: ');

Print
          Instrução = Cmd Instrução
          Cmd = 'Print' '(' 'CTE_STR' PrintParâmetros ')' ';'
              [0037, 0001] (0035,             RW_PRINT) {Print}
              [0037, 0002] (0046,            DEL_OPENP) {(}
              [0037, 0003] (0043,              CTE_STR) {'Insira o tamanho do array: '}
          PrintParâmetros = ε
              [0037, 0004] (0047,           DEL_CLOSEP) {)}
              [0037, 0005] (0051,             DEL_SEMI) {;}
38              Scan(n);

Scan
          Instrução = Cmd Instrução
          Cmd = 'Scan' '('  Scan ')' ';'
              [0038, 0001] (0034,              RW_SCAN) {Scan}
              [0038, 0002] (0046,            DEL_OPENP) {(}
          Scan = 'id'  Vector Scan_LL
              [0038, 0003] (0001,                   ID) {n}
          VetTipo = ε
          Scan_LL = ε
              [0038, 0004] (0047,           DEL_CLOSEP) {)}
              [0038, 0005] (0051,             DEL_SEMI) {;}
39

40              Int array[n];

          Instrução = DeclaraçãoId Instrução
          DeclaraçãoId = FunctionType Id ';'
          Vartype = Int
              [0040, 0001] (0024,               RW_INT) {Int}
          LId = Id Atribuição Id_LL
          Id = 'id' ArrayOpt
              [0040, 0002] (0001,                   ID) {array}
          VetTipo = '[' AE ']'
              [0040, 0003] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0040, 0004] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0040, 0005] (0048,           DEL_ENDBRA) {]}
          Atribuição = ε
          Id_LL = ε
              [0040, 0006] (0051,             DEL_SEMI) {;}
41

42              Print('Insira os elementos do array: ');

Print
          Instrução = Cmd Instrução
          Cmd = 'Print' '(' 'CTE_STR' PrintParâmetros ')' ';'
              [0042, 0001] (0035,             RW_PRINT) {Print}
              [0042, 0002] (0046,            DEL_OPENP) {(}
              [0042, 0003] (0043,              CTE_STR) {'Insira os elementos do array: '}
          PrintParâmetros = ε
              [0042, 0004] (0047,           DEL_CLOSEP) {)}
              [0042, 0005] (0051,             DEL_SEMI) {;}
43

44         For (Int i = 0, 1, n) Open

For
          Instrução = Cmd Instrução
              [0044, 0001] (0020,               RW_FOR) {For}
          For = '(' 'Int' 'id' '='  AE ',' AE ForStep')' Bloco
              [0044, 0002] (0046,            DEL_OPENP) {(}
              [0044, 0003] (0024,               RW_INT) {Int}
              [0044, 0004] (0001,                   ID) {i}
              [0044, 0005] (0015,               OP_ATR) {=}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0044, 0006] (0040,              CTE_INT) {0}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0044, 0007] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0044, 0008] (0040,              CTE_INT) {1}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          ForStep = ',' AE
              [0044, 0009] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0044, 0010] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0044, 0011] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0044, 0012] (0032,              RW_OPEN) {Open}
45              Scan(array[i]);

Scan
          Instrução = Cmd Instrução
          Cmd = 'Scan' '('  Scan ')' ';'
              [0045, 0001] (0034,              RW_SCAN) {Scan}
              [0045, 0002] (0046,            DEL_OPENP) {(}
          Scan = 'id'  Vector Scan_LL
              [0045, 0003] (0001,                   ID) {array}
          VetTipo = '[' AE ']'
              [0045, 0004] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0045, 0005] (0001,                   ID) {i}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0045, 0006] (0048,           DEL_ENDBRA) {]}
          Scan_LL = ε
              [0045, 0007] (0047,           DEL_CLOSEP) {)}
              [0045, 0008] (0051,             DEL_SEMI) {;}
46         Close

          Instrução = ε
              [0046, 0001] (0033,             RW_CLOSE) {Close}
47

48         Print('Valores adicionados: ');

Print
          Instrução = Cmd Instrução
          Cmd = 'Print' '(' 'CTE_STR' PrintParâmetros ')' ';'
              [0048, 0001] (0035,             RW_PRINT) {Print}
              [0048, 0002] (0046,            DEL_OPENP) {(}
              [0048, 0003] (0043,              CTE_STR) {'Valores adicionados: '}
          PrintParâmetros = ε
              [0048, 0004] (0047,           DEL_CLOSEP) {)}
              [0048, 0005] (0051,             DEL_SEMI) {;}
49

50         For (Int i = 0, 1, n) Open

For
          Instrução = Cmd Instrução
              [0050, 0001] (0020,               RW_FOR) {For}
          For = '(' 'Int' 'id' '='  AE ',' AE ForStep')' Bloco
              [0050, 0002] (0046,            DEL_OPENP) {(}
              [0050, 0003] (0024,               RW_INT) {Int}
              [0050, 0004] (0001,                   ID) {i}
              [0050, 0005] (0015,               OP_ATR) {=}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0050, 0006] (0040,              CTE_INT) {0}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0050, 0007] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0050, 0008] (0040,              CTE_INT) {1}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          ForStep = ',' AE
              [0050, 0009] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0050, 0010] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0050, 0011] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0050, 0012] (0032,              RW_OPEN) {Open}
51             current = array[i];

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0051, 0001] (0001,                   ID) {current}
          ParamAtr = '=' CE lAtr
              [0051, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0051, 0003] (0001,                   ID) {array}
          IdChamadaFunção_LL = '[' AE']'
              [0051, 0004] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0051, 0005] (0001,                   ID) {i}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0051, 0006] (0048,           DEL_ENDBRA) {]}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0051, 0007] (0051,             DEL_SEMI) {;}
52              Printnl(current);

Printnl
          Instrução = Cmd Instrução
          Cmd = 'Print' '(' 'CTE_STR' PrintParâmetros ')' ';'
              [0052, 0001] (0036,           RW_PRINTNL) {Printnl}
              [0052, 0002] (0046,            DEL_OPENP) {(}
              [0052, 0003] (0001,                   ID) {current}
          PrintParâmetros = ε
              [0052, 0004] (0047,           DEL_CLOSEP) {)}
              [0052, 0005] (0051,             DEL_SEMI) {;}
53         Close

          Instrução = ε
              [0053, 0001] (0033,             RW_CLOSE) {Close}
54

55              shellsort(array[n], n);

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0055, 0001] (0001,                   ID) {shellsort}
          ParamAtr = '(' ParâmetrosFunção ')'
              [0055, 0002] (0046,            DEL_OPENP) {(}
          ParâmetrosFunção = CE ParâmetrosFunção_LL
              [0055, 0003] (0001,                   ID) {array}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0055, 0003] (0001,                   ID) {array}
          IdChamadaFunção_LL = '[' AE']'
              [0055, 0004] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0055, 0005] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0055, 0006] (0048,           DEL_ENDBRA) {]}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          ParâmetrosFunção_LL = ',' CE ParâmetrosFunção_LL
              [0055, 0007] (0050,            DEL_COMMA) {,}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0055, 0008] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          ParâmetrosFunção_LL = ε
              [0055, 0009] (0047,           DEL_CLOSEP) {)}
              [0055, 0010] (0051,             DEL_SEMI) {;}
56

57              Print('Valores ordenados: ');

Print
          Instrução = Cmd Instrução
          Cmd = 'Print' '(' 'CTE_STR' PrintParâmetros ')' ';'
              [0057, 0001] (0035,             RW_PRINT) {Print}
              [0057, 0002] (0046,            DEL_OPENP) {(}
              [0057, 0003] (0043,              CTE_STR) {'Valores ordenados: '}
          PrintParâmetros = ε
              [0057, 0004] (0047,           DEL_CLOSEP) {)}
              [0057, 0005] (0051,             DEL_SEMI) {;}
58

59         For (Int i = 0, 1, n) Open

For
          Instrução = Cmd Instrução
              [0059, 0001] (0020,               RW_FOR) {For}
          For = '(' 'Int' 'id' '='  AE ',' AE ForStep')' Bloco
              [0059, 0002] (0046,            DEL_OPENP) {(}
              [0059, 0003] (0024,               RW_INT) {Int}
              [0059, 0004] (0001,                   ID) {i}
              [0059, 0005] (0015,               OP_ATR) {=}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0059, 0006] (0040,              CTE_INT) {0}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0059, 0007] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0059, 0008] (0040,              CTE_INT) {1}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          ForStep = ',' AE
              [0059, 0009] (0050,            DEL_COMMA) {,}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0059, 0010] (0001,                   ID) {n}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0059, 0011] (0047,           DEL_CLOSEP) {)}
          Bloco = '{' Instrução '}'
              [0059, 0012] (0032,              RW_OPEN) {Open}
60             current = array[i];

          Instrução = Instrução_LL ';' Instrução
          Instrução_LL = 'id' ParamAtr
              [0060, 0001] (0001,                   ID) {current}
          ParamAtr = '=' CE lAtr
              [0060, 0002] (0015,               OP_ATR) {=}
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0060, 0003] (0001,                   ID) {array}
          IdChamadaFunção_LL = '[' AE']'
              [0060, 0004] (0049,          DEL_OPENBRA) {[}
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          IdChamadaFunção = 'id' IdChamadaFunção_LL
              [0060, 0005] (0001,                   ID) {i}
          IdChamadaFunção_LL = ε
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
              [0060, 0006] (0048,           DEL_ENDBRA) {]}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
          lAtr = ε
              [0060, 0007] (0051,             DEL_SEMI) {;}
61              Printnl(current);

Printnl
          Instrução = Cmd Instrução
          Cmd = 'Print' '(' 'CTE_STR' PrintParâmetros ')' ';'
              [0061, 0001] (0036,           RW_PRINTNL) {Printnl}
              [0061, 0002] (0046,            DEL_OPENP) {(}
              [0061, 0003] (0001,                   ID) {current}
          PrintParâmetros = ε
              [0061, 0004] (0047,           DEL_CLOSEP) {)}
              [0061, 0005] (0051,             DEL_SEMI) {;}
62         Close

          Instrução = ε
              [0062, 0001] (0033,             RW_CLOSE) {Close}
63

64              Back 0;

          Instrução = 'Back' Back ';'
              [0064, 0001] (0018,              RW_BACK) {Back}
          Back = CE
          CE = CF CE
          BE = BT BE
          BT = BF BT_LL
          BF = AR BF_LL
          AR = AT AR_LL
          AE = AT AE_LL
          AT = AP AT_LL
          AP = AF AP_LL
          AF = 'CTE_INT'
              [0064, 0002] (0040,              CTE_INT) {0}
          AP_LL = ε
          AT_LL = ε
          AE_LL = ε
          AR_LL = ε
          BF_LL = ε
          BT_LL = ε
          BE_LL = ε
          CE_LL = ε
              [0064, 0003] (0051,             DEL_SEMI) {;}
65 Close
              [0065, 0001] (0033,             RW_CLOSE) {Close}
          S = ε
